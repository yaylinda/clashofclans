basePath: /v1
consumes:
- application/json
definitions:
  BuilderBaseLeague:
    properties:
      id:
        type: integer
      name:
        $ref: '#/definitions/JsonLocalizedName'
    type: object
  BuilderBaseLeagueList:
    items:
      $ref: '#/definitions/BuilderBaseLeague'
    type: array
  CapitalLeague:
    properties:
      id:
        type: integer
      name:
        $ref: '#/definitions/JsonLocalizedName'
    type: object
  CapitalLeagueList:
    items:
      $ref: '#/definitions/CapitalLeague'
    type: array
  Clan:
    properties:
      badgeUrls:
        type: object
      capitalLeague:
        $ref: '#/definitions/CapitalLeague'
      chatLanguage:
        $ref: '#/definitions/Language'
      clanBuilderBasePoints:
        type: integer
      clanCapital:
        $ref: '#/definitions/ClanCapital'
      clanCapitalPoints:
        type: integer
      clanLevel:
        type: integer
      clanPoints:
        type: integer
      description:
        type: string
      isFamilyFriendly:
        type: boolean
      isWarLogPublic:
        type: boolean
      labels:
        $ref: '#/definitions/LabelList'
      location:
        $ref: '#/definitions/Location'
      memberList:
        $ref: '#/definitions/ClanMemberList'
      members:
        type: integer
      name:
        type: string
      requiredBuilderBaseTrophies:
        type: integer
      requiredTownhallLevel:
        type: integer
      requiredTrophies:
        type: integer
      tag:
        type: string
      type:
        enum:
        - open
        - inviteOnly
        - closed
        type: string
      warFrequency:
        enum:
        - unknown
        - always
        - moreThanOncePerWeek
        - oncePerWeek
        - lessThanOncePerWeek
        - never
        - any
        type: string
      warLeague:
        $ref: '#/definitions/WarLeague'
      warLosses:
        type: integer
      warTies:
        type: integer
      warWinStreak:
        type: integer
      warWins:
        type: integer
    type: object
  ClanBuilderBaseRanking:
    properties:
      clanBuilderBasePoints:
        type: integer
      clanPoints:
        type: integer
    type: object
  ClanBuilderBaseRankingList:
    items:
      $ref: '#/definitions/ClanBuilderBaseRanking'
    type: array
  ClanCapital:
    properties:
      capitalHallLevel:
        type: integer
      districts:
        $ref: '#/definitions/ClanDistrictDataList'
    type: object
  ClanCapitalRaidSeason:
    properties:
      attackLog:
        $ref: '#/definitions/ClanCapitalRaidSeasonAttackLogList'
      capitalTotalLoot:
        type: integer
      defenseLog:
        $ref: '#/definitions/ClanCapitalRaidSeasonDefenseLogList'
      defensiveReward:
        type: integer
      endTime:
        type: string
      enemyDistrictsDestroyed:
        type: integer
      members:
        $ref: '#/definitions/ClanCapitalRaidSeasonMemberList'
      offensiveReward:
        type: integer
      raidsCompleted:
        type: integer
      startTime:
        type: string
      state:
        type: string
      totalAttacks:
        type: integer
    type: object
  ClanCapitalRaidSeasonAttack:
    properties:
      attacker:
        $ref: '#/definitions/ClanCapitalRaidSeasonAttacker'
      destructionPercent:
        type: integer
      stars:
        type: integer
    type: object
  ClanCapitalRaidSeasonAttackList:
    items:
      $ref: '#/definitions/ClanCapitalRaidSeasonAttack'
    type: array
  ClanCapitalRaidSeasonAttackLogEntry:
    properties:
      attackCount:
        type: integer
      defender:
        $ref: '#/definitions/ClanCapitalRaidSeasonClanInfo'
      districtCount:
        type: integer
      districts:
        $ref: '#/definitions/ClanCapitalRaidSeasonDistrictList'
      districtsDestroyed:
        type: integer
    type: object
  ClanCapitalRaidSeasonAttackLogList:
    items:
      $ref: '#/definitions/ClanCapitalRaidSeasonAttackLogEntry'
    type: array
  ClanCapitalRaidSeasonAttacker:
    properties:
      name:
        type: string
      tag:
        type: string
    type: object
  ClanCapitalRaidSeasonClanInfo:
    properties:
      badgeUrls:
        type: object
      level:
        type: integer
      name:
        type: string
      tag:
        type: string
    type: object
  ClanCapitalRaidSeasonDefenseLogEntry:
    properties:
      attackCount:
        type: integer
      attacker:
        $ref: '#/definitions/ClanCapitalRaidSeasonClanInfo'
      districtCount:
        type: integer
      districts:
        $ref: '#/definitions/ClanCapitalRaidSeasonDistrictList'
      districtsDestroyed:
        type: integer
    type: object
  ClanCapitalRaidSeasonDefenseLogList:
    items:
      $ref: '#/definitions/ClanCapitalRaidSeasonDefenseLogEntry'
    type: array
  ClanCapitalRaidSeasonDistrict:
    properties:
      attackCount:
        type: integer
      attacks:
        $ref: '#/definitions/ClanCapitalRaidSeasonAttackList'
      destructionPercent:
        type: integer
      districtHallLevel:
        type: integer
      id:
        type: integer
      name:
        $ref: '#/definitions/JsonLocalizedName'
      stars:
        type: integer
      totalLooted:
        type: integer
    type: object
  ClanCapitalRaidSeasonDistrictList:
    items:
      $ref: '#/definitions/ClanCapitalRaidSeasonDistrict'
    type: array
  ClanCapitalRaidSeasonMember:
    properties:
      attackLimit:
        type: integer
      attacks:
        type: integer
      bonusAttackLimit:
        type: integer
      capitalResourcesLooted:
        type: integer
      name:
        type: string
      tag:
        type: string
    type: object
  ClanCapitalRaidSeasonMemberList:
    items:
      $ref: '#/definitions/ClanCapitalRaidSeasonMember'
    type: array
  ClanCapitalRaidSeasons:
    items:
      $ref: '#/definitions/ClanCapitalRaidSeason'
    type: array
  ClanCapitalRanking:
    properties:
      clanCapitalPoints:
        type: integer
      clanPoints:
        type: integer
    type: object
  ClanCapitalRankingList:
    items:
      $ref: '#/definitions/ClanCapitalRanking'
    type: array
  ClanDistrictData:
    properties:
      districtHallLevel:
        type: integer
      id:
        type: integer
      name:
        $ref: '#/definitions/JsonLocalizedName'
    type: object
  ClanDistrictDataList:
    items:
      $ref: '#/definitions/ClanDistrictData'
    type: array
  ClanList:
    items:
      $ref: '#/definitions/Clan'
    type: array
  ClanMember:
    properties:
      builderBaseLeague:
        $ref: '#/definitions/BuilderBaseLeague'
      builderBaseTrophies:
        type: integer
      clanRank:
        type: integer
      donations:
        type: integer
      donationsReceived:
        type: integer
      expLevel:
        type: integer
      league:
        $ref: '#/definitions/League'
      name:
        type: string
      playerHouse:
        $ref: '#/definitions/PlayerHouse'
      previousClanRank:
        type: integer
      role:
        enum:
        - notMember
        - member
        - leader
        - admin
        - coleader
        type: string
      tag:
        type: string
      townHallLevel:
        type: integer
      trophies:
        type: integer
    type: object
  ClanMemberList:
    items:
      $ref: '#/definitions/ClanMember'
    type: array
  ClanRanking:
    properties:
      badgeUrls:
        type: object
      clanLevel:
        type: integer
      clanPoints:
        type: integer
      location:
        $ref: '#/definitions/Location'
      members:
        type: integer
      name:
        type: string
      previousRank:
        type: integer
      rank:
        type: integer
      tag:
        type: string
    type: object
  ClanRankingList:
    items:
      $ref: '#/definitions/ClanRanking'
    type: array
  ClanWar:
    properties:
      attacksPerMember:
        type: integer
      clan:
        $ref: '#/definitions/WarClan'
      endTime:
        type: string
      opponent:
        $ref: '#/definitions/WarClan'
      preparationStartTime:
        type: string
      startTime:
        type: string
      state:
        enum:
        - clanNotFound
        - accessDenied
        - notInWar
        - inMatchmaking
        - enterWar
        - matched
        - preparation
        - war
        - inWar
        - ended
        - warEnded
        type: string
      teamSize:
        type: integer
    type: object
  ClanWarAttack:
    properties:
      attackerTag:
        type: string
      defenderTag:
        type: string
      destructionPercentage:
        type: integer
      duration:
        type: integer
      order:
        type: integer
      stars:
        type: integer
    type: object
  ClanWarAttackList:
    items:
      $ref: '#/definitions/ClanWarAttack'
    type: array
  ClanWarLeagueClan:
    properties:
      badgeUrls:
        type: object
      clanLevel:
        type: integer
      members:
        $ref: '#/definitions/ClanWarLeagueClanMemberList'
      name:
        type: string
      tag:
        type: string
    type: object
  ClanWarLeagueClanList:
    items:
      $ref: '#/definitions/ClanWarLeagueClan'
    type: array
  ClanWarLeagueClanMember:
    properties:
      name:
        type: string
      tag:
        type: string
      townHallLevel:
        type: integer
    type: object
  ClanWarLeagueClanMemberList:
    items:
      $ref: '#/definitions/ClanWarLeagueClanMember'
    type: array
  ClanWarLeagueGroup:
    properties:
      clans:
        $ref: '#/definitions/ClanWarLeagueClanList'
      rounds:
        $ref: '#/definitions/ClanWarLeagueRoundList'
      season:
        type: string
      state:
        enum:
        - groupNotFound
        - notInWar
        - preparation
        - war
        - ended
        type: string
      tag:
        type: string
    type: object
  ClanWarLeagueRound:
    properties:
      warTags:
        $ref: '#/definitions/StringList'
    type: object
  ClanWarLeagueRoundList:
    items:
      $ref: '#/definitions/ClanWarLeagueRound'
    type: array
  ClanWarLog:
    items:
      $ref: '#/definitions/ClanWarLogEntry'
    type: array
  ClanWarLogEntry:
    properties:
      attacksPerMember:
        type: integer
      clan:
        $ref: '#/definitions/WarClan'
      endTime:
        type: string
      opponent:
        $ref: '#/definitions/WarClan'
      result:
        enum:
        - lose
        - win
        - tie
        type: string
      teamSize:
        type: integer
    type: object
  ClanWarMember:
    properties:
      attacks:
        $ref: '#/definitions/ClanWarAttackList'
      bestOpponentAttack:
        $ref: '#/definitions/ClanWarAttack'
      mapPosition:
        type: integer
      name:
        type: string
      opponentAttacks:
        type: integer
      tag:
        type: string
      townhallLevel:
        type: integer
    type: object
  ClanWarMemberList:
    items:
      $ref: '#/definitions/ClanWarMember'
    type: array
  ClientError:
    properties:
      detail:
        type: object
      message:
        type: string
      reason:
        type: string
      type:
        type: string
    type: object
  DeepLinkCreationRequest:
    properties:
      clanTag:
        type: string
      opponentClanTag:
        type: string
      playerTags:
        $ref: '#/definitions/StringList'
    type: object
  DeepLinkCreationResponse:
    properties:
      link:
        type: string
    type: object
  Float:
    type: object
  GoldPassSeason:
    properties:
      endTime:
        type: string
      startTime:
        type: string
    type: object
  JsonLocalizedName:
    type: object
  JsonNode:
    type: object
  Label:
    properties:
      iconUrls:
        type: object
      id:
        type: integer
      name:
        $ref: '#/definitions/JsonLocalizedName'
    type: object
  LabelList:
    items:
      $ref: '#/definitions/Label'
    type: array
  Language:
    properties:
      id:
        type: integer
      languageCode:
        type: string
      name:
        type: string
    type: object
  League:
    properties:
      iconUrls:
        type: object
      id:
        type: integer
      name:
        $ref: '#/definitions/JsonLocalizedName'
    type: object
  LeagueList:
    items:
      $ref: '#/definitions/League'
    type: array
  LeagueSeason:
    properties:
      id:
        type: string
    type: object
  LeagueSeasonList:
    items:
      $ref: '#/definitions/LeagueSeason'
    type: array
  LegendLeagueTournamentSeasonResult:
    properties:
      id:
        type: string
      rank:
        type: integer
      trophies:
        type: integer
    type: object
  Location:
    properties:
      countryCode:
        type: string
      id:
        type: integer
      isCountry:
        type: boolean
      localizedName:
        type: string
      name:
        type: string
    type: object
  LocationList:
    items:
      $ref: '#/definitions/Location'
    type: array
  Player:
    properties:
      achievements:
        $ref: '#/definitions/PlayerAchievementProgressList'
      attackWins:
        type: integer
      bestBuilderBaseTrophies:
        type: integer
      bestTrophies:
        type: integer
      builderBaseLeague:
        $ref: '#/definitions/BuilderBaseLeague'
      builderBaseTrophies:
        type: integer
      builderHallLevel:
        type: integer
      clan:
        $ref: '#/definitions/PlayerClan'
      clanCapitalContributions:
        type: integer
      defenseWins:
        type: integer
      donations:
        type: integer
      donationsReceived:
        type: integer
      expLevel:
        type: integer
      heroEquipment:
        $ref: '#/definitions/PlayerItemLevelList'
      heroes:
        $ref: '#/definitions/PlayerItemLevelList'
      labels:
        $ref: '#/definitions/LabelList'
      league:
        $ref: '#/definitions/League'
      legendStatistics:
        $ref: '#/definitions/PlayerLegendStatistics'
      name:
        type: string
      playerHouse:
        $ref: '#/definitions/PlayerHouse'
      role:
        enum:
        - notMember
        - member
        - leader
        - admin
        - coleader
        type: string
      spells:
        $ref: '#/definitions/PlayerItemLevelList'
      tag:
        type: string
      townHallLevel:
        type: integer
      townHallWeaponLevel:
        type: integer
      troops:
        $ref: '#/definitions/PlayerItemLevelList'
      trophies:
        type: integer
      warPreference:
        enum:
        - out
        - in
        type: string
      warStars:
        type: integer
    type: object
  PlayerAchievementProgress:
    properties:
      completionInfo:
        $ref: '#/definitions/JsonLocalizedName'
      info:
        $ref: '#/definitions/JsonLocalizedName'
      name:
        $ref: '#/definitions/JsonLocalizedName'
      stars:
        type: integer
      target:
        type: integer
      value:
        type: integer
      village:
        enum:
        - homeVillage
        - builderBase
        - clanCapital
        type: string
    type: object
  PlayerAchievementProgressList:
    items:
      $ref: '#/definitions/PlayerAchievementProgress'
    type: array
  PlayerBuilderBaseRanking:
    properties:
      builderBaseLeague:
        $ref: '#/definitions/BuilderBaseLeague'
      builderBaseTrophies:
        type: integer
      clan:
        $ref: '#/definitions/PlayerRankingClan'
      expLevel:
        type: integer
      name:
        type: string
      previousRank:
        type: integer
      rank:
        type: integer
      tag:
        type: string
    type: object
  PlayerBuilderBaseRankingList:
    items:
      $ref: '#/definitions/PlayerBuilderBaseRanking'
    type: array
  PlayerClan:
    properties:
      badgeUrls:
        type: object
      clanLevel:
        type: integer
      name:
        type: string
      tag:
        type: string
    type: object
  PlayerHouse:
    properties:
      elements:
        $ref: '#/definitions/PlayerHouseElementList'
    type: object
  PlayerHouseElement:
    properties:
      id:
        type: integer
      type:
        enum:
        - ground
        - roof
        - foot
        - deco
        type: string
    type: object
  PlayerHouseElementList:
    items:
      $ref: '#/definitions/PlayerHouseElement'
    type: array
  PlayerItemLevel:
    properties:
      equipment:
        $ref: '#/definitions/PlayerItemLevelList'
      level:
        type: integer
      maxLevel:
        type: integer
      name:
        $ref: '#/definitions/JsonLocalizedName'
      superTroopIsActive:
        type: boolean
      village:
        enum:
        - homeVillage
        - builderBase
        - clanCapital
        type: string
    type: object
  PlayerItemLevelList:
    items:
      $ref: '#/definitions/PlayerItemLevel'
    type: array
  PlayerLegendStatistics:
    properties:
      bestBuilderBaseSeason:
        $ref: '#/definitions/LegendLeagueTournamentSeasonResult'
      bestSeason:
        $ref: '#/definitions/LegendLeagueTournamentSeasonResult'
      currentSeason:
        $ref: '#/definitions/LegendLeagueTournamentSeasonResult'
      legendTrophies:
        type: integer
      previousBuilderBaseSeason:
        $ref: '#/definitions/LegendLeagueTournamentSeasonResult'
      previousSeason:
        $ref: '#/definitions/LegendLeagueTournamentSeasonResult'
    type: object
  PlayerRanking:
    properties:
      attackWins:
        type: integer
      clan:
        $ref: '#/definitions/PlayerRankingClan'
      defenseWins:
        type: integer
      expLevel:
        type: integer
      league:
        $ref: '#/definitions/League'
      name:
        type: string
      previousRank:
        type: integer
      rank:
        type: integer
      tag:
        type: string
      trophies:
        type: integer
    type: object
  PlayerRankingClan:
    properties:
      badgeUrls:
        type: object
      name:
        type: string
      tag:
        type: string
    type: object
  PlayerRankingList:
    items:
      $ref: '#/definitions/PlayerRanking'
    type: array
  Replay:
    properties:
      replayData:
        $ref: '#/definitions/JsonNode'
      replayTag:
        type: string
    type: object
  ServiceVersion:
    properties:
      content:
        type: integer
      major:
        type: integer
      minor:
        type: integer
    type: object
  String:
    type: object
  StringList:
    items:
      type: string
    type: array
  VerifyTokenRequest:
    properties:
      token:
        type: string
    type: object
  VerifyTokenResponse:
    properties:
      status:
        type: string
      tag:
        type: string
      token:
        type: string
    type: object
  WarClan:
    properties:
      attacks:
        type: integer
      badgeUrls:
        type: object
      clanLevel:
        type: integer
      destructionPercentage:
        $ref: '#/definitions/Float'
      expEarned:
        type: integer
      members:
        $ref: '#/definitions/ClanWarMemberList'
      name:
        type: string
      stars:
        type: integer
      tag:
        type: string
    type: object
  WarLeague:
    properties:
      id:
        type: integer
      name:
        $ref: '#/definitions/JsonLocalizedName'
    type: object
  WarLeagueList:
    items:
      $ref: '#/definitions/WarLeague'
    type: array
  WarStatus:
    properties:
      clanTag:
        type: string
      enemyClanTag:
        type: string
      statusCode:
        type: integer
      timestamp:
        type: string
      warState:
        enum:
        - clanNotFound
        - accessDenied
        - notInWar
        - inMatchmaking
        - enterWar
        - matched
        - preparation
        - war
        - inWar
        - ended
        type: string
    type: object
  WarStatusList:
    items:
      $ref: '#/definitions/WarStatus'
    type: array
host: api.clashofclans.com
info:
  description: Clash of Clans API
  termsOfService: http://supercell.com/en/terms-of-service/
  title: Clash of Clans API
  version: v1
paths:
  /builderbaseleagues:
    get:
      description: List Builder Base leagues
      operationId: getBuilderBaseLeagues
      parameters:
      - description: Limit the number of items returned in the response.
        in: query
        name: limit
        required: false
        type: integer
      - description: 'Return only items that occur after this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: after
        required: false
        type: string
      - description: 'Return only items that occur before this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: before
        required: false
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BuilderBaseLeagueList'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: List Builder Base leagues
      tags:
      - leagues
  /builderbaseleagues/{leagueId}:
    get:
      description: Get Builder Base league information
      operationId: getBuilderBaseLeague
      parameters:
      - description: Identifier of the league.
        in: path
        name: leagueId
        required: true
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BuilderBaseLeague'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Get Builder Base league information
      tags:
      - leagues
  /capitalleagues:
    get:
      description: List capital leagues
      operationId: getCapitalLeagues
      parameters:
      - description: Limit the number of items returned in the response.
        in: query
        name: limit
        required: false
        type: integer
      - description: 'Return only items that occur after this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: after
        required: false
        type: string
      - description: 'Return only items that occur before this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: before
        required: false
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CapitalLeagueList'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: List capital leagues
      tags:
      - leagues
  /capitalleagues/{leagueId}:
    get:
      description: Get capital league information
      operationId: getCapitalLeague
      parameters:
      - description: Identifier of the league.
        in: path
        name: leagueId
        required: true
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CapitalLeague'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Get capital league information
      tags:
      - leagues
  /clans:
    get:
      description: 'Search all clans by name and/or filtering the results using various
        criteria. At least one filtering criteria must be defined and if name is used
        as part of search, it is required to be at least three characters long. It
        is not possible to specify ordering for results so clients should not rely
        on any specific ordering as that may change in the future releases of the
        API.

        '
      operationId: searchClans
      parameters:
      - description: 'Search clans by name. If name is used as part of search query,
          it needs to be at least three characters long. Name search parameter is
          interpreted as wild card search, so it may appear anywhere in the clan name.

          '
        in: query
        name: name
        required: false
        type: string
      - description: Filter by clan war frequency
        in: query
        name: warFrequency
        required: false
        type: string
      - description: 'Filter by clan location identifier. For list of available locations,
          refer to getLocations operation.

          '
        in: query
        name: locationId
        required: false
        type: integer
      - description: Filter by minimum number of clan members
        in: query
        name: minMembers
        required: false
        type: integer
      - description: Filter by maximum number of clan members
        in: query
        name: maxMembers
        required: false
        type: integer
      - description: Filter by minimum amount of clan points.
        in: query
        name: minClanPoints
        required: false
        type: integer
      - description: Filter by minimum clan level.
        in: query
        name: minClanLevel
        required: false
        type: integer
      - description: Limit the number of items returned in the response.
        in: query
        name: limit
        required: false
        type: integer
      - description: 'Return only items that occur after this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: after
        required: false
        type: string
      - description: 'Return only items that occur before this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: before
        required: false
        type: string
      - description: Comma separatered list of label IDs to use for filtering results.
        in: query
        name: labelIds
        required: false
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClanList'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Search clans
      tags:
      - clans
  /clans/{clanTag}:
    get:
      description: 'Get information about a single clan by clan tag. Clan tags can
        be found using clan search operation. Note that clan tags start with hash
        character ''#'' and that needs to be URL-encoded properly to work in URL,
        so for example clan tag ''#2ABC'' would become ''%232ABC'' in the URL.

        '
      operationId: getClan
      parameters:
      - description: Tag of the clan.
        in: path
        name: clanTag
        required: true
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Clan'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Get clan information
      tags:
      - clans
  /clans/{clanTag}/capitalraidseasons:
    get:
      description: Retrieve clan's capital raid seasons
      operationId: getCapitalRaidSeasons
      parameters:
      - description: Tag of the clan.
        in: path
        name: clanTag
        required: true
        type: string
      - description: Limit the number of items returned in the response.
        in: query
        name: limit
        required: false
        type: integer
      - description: 'Return only items that occur after this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: after
        required: false
        type: string
      - description: 'Return only items that occur before this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: before
        required: false
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClanCapitalRaidSeasons'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Retrieve clan's capital raid seasons
      tags:
      - clans
  /clans/{clanTag}/currentwar:
    get:
      description: Retrieve information about clan's current clan war
      operationId: getCurrentWar
      parameters:
      - description: Tag of the clan.
        in: path
        name: clanTag
        required: true
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClanWar'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Retrieve information about clan's current clan war
      tags:
      - clans
  /clans/{clanTag}/currentwar/leaguegroup:
    get:
      description: Retrieve information about clan's current clan war league group
      operationId: getClanWarLeagueGroup
      parameters:
      - description: Tag of the clan.
        in: path
        name: clanTag
        required: true
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClanWarLeagueGroup'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Retrieve information about clan's current clan war league group
      tags:
      - clans
  /clans/{clanTag}/members:
    get:
      description: List clan members.
      operationId: getClanMembers
      parameters:
      - description: Tag of the clan.
        in: path
        name: clanTag
        required: true
        type: string
      - description: Limit the number of items returned in the response.
        in: query
        name: limit
        required: false
        type: integer
      - description: 'Return only items that occur after this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: after
        required: false
        type: string
      - description: 'Return only items that occur before this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: before
        required: false
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClanMemberList'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: List clan members
      tags:
      - clans
  /clans/{clanTag}/warlog:
    get:
      description: Retrieve clan's clan war log
      operationId: getClanWarLog
      parameters:
      - description: Tag of the clan.
        in: path
        name: clanTag
        required: true
        type: string
      - description: Limit the number of items returned in the response.
        in: query
        name: limit
        required: false
        type: integer
      - description: 'Return only items that occur after this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: after
        required: false
        type: string
      - description: 'Return only items that occur before this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: before
        required: false
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClanWarLog'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Retrieve clan's clan war log
      tags:
      - clans
  /clanwarleagues/wars/{warTag}:
    get:
      description: Retrieve information about individual clan war league war
      operationId: getClanWarLeagueWar
      parameters:
      - description: Tag of the war.
        in: path
        name: warTag
        required: true
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClanWarLeagueGroup'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Retrieve information about individual clan war league war
      tags:
      - clans
  /goldpass/seasons/current:
    get:
      description: Get information about the current gold pass season.
      operationId: getCurrentGoldPassSeason
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoldPassSeason'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Get information about the current gold pass season.
      tags:
      - goldpass
  /labels/clans:
    get:
      description: List clan labels
      operationId: getClanLabels
      parameters:
      - description: Limit the number of items returned in the response.
        in: query
        name: limit
        required: false
        type: integer
      - description: 'Return only items that occur after this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: after
        required: false
        type: string
      - description: 'Return only items that occur before this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: before
        required: false
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LabelList'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: List clan labels
      tags:
      - labels
  /labels/players:
    get:
      description: List player labels
      operationId: getPlayerLabels
      parameters:
      - description: Limit the number of items returned in the response.
        in: query
        name: limit
        required: false
        type: integer
      - description: 'Return only items that occur after this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: after
        required: false
        type: string
      - description: 'Return only items that occur before this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: before
        required: false
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LabelList'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: List player labels
      tags:
      - labels
  /leagues:
    get:
      description: List leagues
      operationId: getLeagues
      parameters:
      - description: Limit the number of items returned in the response.
        in: query
        name: limit
        required: false
        type: integer
      - description: 'Return only items that occur after this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: after
        required: false
        type: string
      - description: 'Return only items that occur before this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: before
        required: false
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LeagueList'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: List leagues
      tags:
      - leagues
  /leagues/{leagueId}:
    get:
      description: Get league information
      operationId: getLeague
      parameters:
      - description: Identifier of the league.
        in: path
        name: leagueId
        required: true
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/League'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Get league information
      tags:
      - leagues
  /leagues/{leagueId}/seasons:
    get:
      description: 'Get league seasons. Note that league season information is available
        only for Legend League.

        '
      operationId: getLeagueSeasons
      parameters:
      - description: Identifier of the league.
        in: path
        name: leagueId
        required: true
        type: string
      - description: Limit the number of items returned in the response.
        in: query
        name: limit
        required: false
        type: integer
      - description: 'Return only items that occur after this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: after
        required: false
        type: string
      - description: 'Return only items that occur before this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: before
        required: false
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LeagueSeasonList'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Get league seasons
      tags:
      - leagues
  /leagues/{leagueId}/seasons/{seasonId}:
    get:
      description: 'Get league season rankings. Note that league season information
        is available only for Legend League.

        '
      operationId: getLeagueSeasonRankings
      parameters:
      - description: Identifier of the league.
        in: path
        name: leagueId
        required: true
        type: string
      - description: Identifier of the season.
        in: path
        name: seasonId
        required: true
        type: string
      - description: Limit the number of items returned in the response.
        in: query
        name: limit
        required: false
        type: integer
      - description: 'Return only items that occur after this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: after
        required: false
        type: string
      - description: 'Return only items that occur before this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: before
        required: false
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PlayerRankingList'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Get league season rankings
      tags:
      - leagues
  /locations:
    get:
      description: List locations
      operationId: getLocations
      parameters:
      - description: Limit the number of items returned in the response.
        in: query
        name: limit
        required: false
        type: integer
      - description: 'Return only items that occur after this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: after
        required: false
        type: string
      - description: 'Return only items that occur before this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: before
        required: false
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LocationList'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: List locations
      tags:
      - locations
  /locations/{locationId}:
    get:
      description: Get information about specific location
      operationId: getLocation
      parameters:
      - description: Identifier of the location to retrieve.
        in: path
        name: locationId
        required: true
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Location'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Get location information
      tags:
      - locations
  /locations/{locationId}/rankings/capitals:
    get:
      description: Get capital rankings for a specific location
      operationId: getClanCapitalRanking
      parameters:
      - description: Identifier of the location to retrieve.
        in: path
        name: locationId
        required: true
        type: string
      - description: Limit the number of items returned in the response.
        in: query
        name: limit
        required: false
        type: integer
      - description: 'Return only items that occur after this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: after
        required: false
        type: string
      - description: 'Return only items that occur before this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: before
        required: false
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClanCapitalRankingList'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Get capital rankings for a specific location
      tags:
      - locations
  /locations/{locationId}/rankings/clans:
    get:
      description: Get clan rankings for a specific location
      operationId: getClanRanking
      parameters:
      - description: Identifier of the location to retrieve.
        in: path
        name: locationId
        required: true
        type: string
      - description: Limit the number of items returned in the response.
        in: query
        name: limit
        required: false
        type: integer
      - description: 'Return only items that occur after this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: after
        required: false
        type: string
      - description: 'Return only items that occur before this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: before
        required: false
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClanRankingList'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Get clan rankings for a specific location
      tags:
      - locations
  /locations/{locationId}/rankings/clans-builder-base:
    get:
      description: Get clan Builder Base rankings for a specific location
      operationId: getClanBuilderBaseRanking
      parameters:
      - description: Identifier of the location to retrieve.
        in: path
        name: locationId
        required: true
        type: string
      - description: Limit the number of items returned in the response.
        in: query
        name: limit
        required: false
        type: integer
      - description: 'Return only items that occur after this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: after
        required: false
        type: string
      - description: 'Return only items that occur before this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: before
        required: false
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClanBuilderBaseRankingList'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Get clan Builder Base rankings for a specific location
      tags:
      - locations
  /locations/{locationId}/rankings/players:
    get:
      description: Get player rankings for a specific location
      operationId: getPlayerRanking
      parameters:
      - description: Identifier of the location to retrieve.
        in: path
        name: locationId
        required: true
        type: string
      - description: Limit the number of items returned in the response.
        in: query
        name: limit
        required: false
        type: integer
      - description: 'Return only items that occur after this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: after
        required: false
        type: string
      - description: 'Return only items that occur before this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: before
        required: false
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PlayerRankingList'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Get player rankings for a specific location
      tags:
      - locations
  /locations/{locationId}/rankings/players-builder-base:
    get:
      description: Get player Builder Base rankings for a specific location
      operationId: getPlayerBuilderBaseRanking
      parameters:
      - description: Identifier of the location to retrieve.
        in: path
        name: locationId
        required: true
        type: string
      - description: Limit the number of items returned in the response.
        in: query
        name: limit
        required: false
        type: integer
      - description: 'Return only items that occur after this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: after
        required: false
        type: string
      - description: 'Return only items that occur before this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: before
        required: false
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PlayerBuilderBaseRankingList'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Get player Builder Base rankings for a specific location
      tags:
      - locations
  /players/{playerTag}:
    get:
      description: 'Get information about a single player by player tag. Player tags
        can be found either in game or by from clan member lists. Note that player
        tags start with hash character ''#'' and that needs to be URL-encoded properly
        to work in URL, so for example player tag ''#2ABC'' would become ''%232ABC''
        in the URL.

        '
      operationId: getPlayer
      parameters:
      - description: Tag of the player.
        in: path
        name: playerTag
        required: true
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Player'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Get player information
      tags:
      - players
  /players/{playerTag}/verifytoken:
    post:
      description: 'Verify player API token that can be found from the game settings.
        This API call can be used to check that players own the game accounts they
        claim to own as they need to provide the one-time use API token that exists
        inside the game.

        '
      operationId: verifyToken
      parameters:
      - description: Tag of the player.
        in: path
        name: playerTag
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/VerifyTokenRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/VerifyTokenResponse'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Verify player API token that can be found from the game settings.
      tags:
      - players
  /warleagues:
    get:
      description: List war leagues
      operationId: getWarLeagues
      parameters:
      - description: Limit the number of items returned in the response.
        in: query
        name: limit
        required: false
        type: integer
      - description: 'Return only items that occur after this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: after
        required: false
        type: string
      - description: 'Return only items that occur before this marker. Before marker
          can be found from the response, inside the ''paging'' property. Note that
          only after or before can be specified for a request, not both.

          '
        in: query
        name: before
        required: false
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/WarLeagueList'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: List war leagues
      tags:
      - leagues
  /warleagues/{leagueId}:
    get:
      description: Get war league information
      operationId: getWarLeague
      parameters:
      - description: Identifier of the league.
        in: path
        name: leagueId
        required: true
        type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/WarLeague'
        '400':
          $ref: '#/responses/BadRequestSpec'
        '403':
          $ref: '#/responses/ForbiddenSpec'
        '404':
          $ref: '#/responses/NotFoundSpec'
        '429':
          $ref: '#/responses/RequestThrottledSpec'
        '500':
          $ref: '#/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/responses/InMaintenanceSpec'
      summary: Get war league information
      tags:
      - leagues
produces:
- application/json
responses:
  BadRequestSpec:
    description: Client provided incorrect parameters for the request.
    schema:
      $ref: '#/definitions/ClientError'
  ForbiddenSpec:
    description: 'Access denied, either because of missing/incorrect credentials or
      used API token does not grant access to the requested resource.

      '
    schema:
      $ref: '#/definitions/ClientError'
  InMaintenanceSpec:
    description: Service is temprorarily unavailable because of maintenance.
    schema:
      $ref: '#/definitions/ClientError'
  NotFoundSpec:
    description: Resource was not found.
    schema:
      $ref: '#/definitions/ClientError'
  RequestThrottledSpec:
    description: 'Request was throttled, because amount of requests was above the
      threshold defined for the used API token.

      '
    schema:
      $ref: '#/definitions/ClientError'
  UnknownExceptionSpec:
    description: Unknown error happened when handling the request.
    schema:
      $ref: '#/definitions/ClientError'
schemes:
- https
- http
security:
- JWT: []
securityDefinitions:
  JWT:
    description: JSON Web Token used as an API key
    in: header
    name: authorization
    type: apiKey
swagger: '2.0'
tags:
- description: Access clan specific information
  name: clans
- description: Access player specific information
  name: players
- description: Access league information
  name: leagues
- description: Access global and local rankings
  name: locations
- description: Access information about gold pass
  name: goldpass
- description: Esports related APIs
  name: esports
